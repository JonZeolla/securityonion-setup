Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 securityonion-setup (20120912-0ubuntu0securityonion152) precise; urgency=low
 .
   * replace /tmp/securityonion.conf with $SECURITYONION_CONF_MASTER using mktemp
Author: Doug Burks <doug.burks@gmail.com>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: http://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: <YYYY-MM-DD>

--- securityonion-setup-20120912.orig/bin/sosetup
+++ securityonion-setup-20120912/bin/sosetup
@@ -107,6 +107,8 @@ SSH_CONF="$SSH_DIR/securityonion_ssh.con
 KEY="$SSH_DIR/securityonion"
 # SOSETUPSCP is a file that will be copied to the master server and executed
 SOSETUPSCP=`mktemp`
+# SECURITYONION_CONF_MASTER is the securityonion.conf from the master server
+SECURITYONION_CONF_MASTER=`mktemp`
 
 #########################################
 # Debug
@@ -1115,8 +1117,8 @@ if [ "$SERVERNAME" != "localhost" ]; the
 	# we were doing this:
 	# IDS_ENGINE=`ssh -i "$KEY" -t $SSH_USERNAME@$SERVERNAME grep ENGINE /etc/nsm/securityonion.conf 2>/dev/null | cut -d\= -f2` >> $LOG 2>&1
 	# but it resulted in a ^M at the end of IDS_ENGINE
-	scp -i "$KEY" $SSH_USERNAME@$SERVERNAME:/etc/nsm/securityonion.conf /tmp/securityonion.conf >> $LOG 2>&1
-	IDS_ENGINE=`grep ENGINE /tmp/securityonion.conf 2>/dev/null | cut -d\= -f2`
+	scp -i "$KEY" $SSH_USERNAME@$SERVERNAME:/etc/nsm/securityonion.conf $SECURITYONION_CONF_MASTER >> $LOG 2>&1
+	IDS_ENGINE=`grep ENGINE $SECURITYONION_CONF_MASTER 2>/dev/null | cut -d\= -f2`
 	# Save configuration
 	echo "SSH_USERNAME=$SSH_USERNAME" > $SSH_CONF
 	echo "SERVERNAME=$SERVERNAME" >> $SSH_CONF
@@ -1481,12 +1483,12 @@ if [ -f $SSH_CONF ]; then
 	service apache2 stop >> $LOG 2>&1
 	update-rc.d -f apache2 disable >> $LOG 2>&1
 	# We previously scp'd securityonion.conf from the master server to /tmp, so let's check that for SNORBY_ENABLED
-	SNORBY_OUTPUT=`grep -i SNORBY_ENABLED /tmp/securityonion.conf | cut -d= -f2`
+	SNORBY_OUTPUT=`grep -i SNORBY_ENABLED $SECURITYONION_CONF_MASTER | cut -d= -f2`
 	if [ "$SNORBY_OUTPUT" == "no" ]; then
 		# Snorby is disabled, so disable the snorby output in all barnyard config files
 		sed -i 's|^output database: alert, mysql, user=root dbname=snorby host=127.0.0.1|#output database: alert, mysql, user=root dbname=snorby host=127.0.0.1|g' /etc/nsm/*/barnyard2*.conf >> $LOG 2>&1
 	fi
-	rm -f /tmp/securityonion.conf	
+	rm -f $SECURITYONION_CONF_MASTER
 else
 	# We are the MASTER.
 
