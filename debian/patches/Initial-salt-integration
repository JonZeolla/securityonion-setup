Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 securityonion-setup (20120912-0ubuntu0securityonion61) precise; urgency=low
 .
   * Initial salt integration
Author: Doug Burks <doug.burks@gmail.com>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: http://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: <YYYY-MM-DD>

--- securityonion-setup-20120912.orig/bin/sosetup
+++ securityonion-setup-20120912/bin/sosetup
@@ -128,6 +128,8 @@ SANCP_AGENT_ENABLED="yes"
 PADS_AGENT_ENABLED="yes"
 ARGUS_ENABLED="yes"
 HTTP_AGENT_ENABLED="yes"
+# Salt is disabled by default, as it's really only needed when you have more than 5 or 10 sensors
+SALT="NO"
 
 #########################################
 # Debug
@@ -588,6 +590,29 @@ Would you like to enable full packet cap
 	# End of ADVANCED SETUP - SENSOR
 fi 
 
+#########################################
+# Ask whether or not to use SALT
+#########################################
+# Check to see if the securityonion-onionsalt package is installed
+if [ $ADVANCED_SETUP -eq 1 ] && dpkg -l |grep "securityonion-onionsalt" |grep "ii" >/dev/null; then
+	TEXT="Salt can be enabled to manage users and rulesets for your sensors.\n\
+\n\
+Please note that Salt integration is experimental!\n\
+\n\
+Would you like to enable Salt?"
+	YES="Yes, enable Salt!"
+	NO="No, disable Salt"
+	zenity --question --title="$TITLE" --text="$TEXT" --ok-label="$YES" --cancel-label="$NO" --no-wrap
+	ANSWER="$?"
+	if [ $ANSWER -eq 0 ]; then
+        	[ $DEBUG -eq 1 ] && echo "DEBUG: Enable ELSA."
+        	SALT="YES"
+	else
+        	[ $DEBUG -eq 1 ] && echo "DEBUG: Disable ELSA."
+        	SALT="NO"
+	fi
+fi
+
 # End of ADVANCED SETUP
 
 #########################################
@@ -1095,7 +1120,7 @@ if [ "$SERVERNAME" = "localhost" ]; then
 		mkdir -p /var/log/nsm/
 		/usr/bin/pulledpork.pl -c $PP_CONF >> /var/log/nsm/pulledpork.log
 	else
-		zenity --error --text="Rule download sites appear to be down.  Skipping rule update."
+		#zenity --error --text="Rule download sites appear to be down.  Skipping rule update."
 		echo "Rule download sites appear to be down.  Skipping rule update." >> $LOG 2>&1
 	fi
 fi
@@ -1139,6 +1164,48 @@ start securityonion >> $LOG 2>&1
 sleep 10s
 
 #########################################
+# Configure Salt
+#########################################
+if [ "$SALT" = "NO" ]; then
+	# Stop both running salt services
+	service salt-master stop >> $LOG 2>&1
+	service salt-minion stop >> $LOG 2>&1
+	# Disable both salt services
+	[ -f /etc/init/salt-master.conf ] && mv /etc/init/salt-master.conf /etc/init/salt-master.DISABLED
+	[ -f /etc/init/salt-minion.conf ] && mv /etc/init/salt-minion.conf /etc/init/salt-minion.DISABLED
+else
+	# Enable Salt
+	if [ $SERVER -eq 1 ]; then
+		# If this box is a Master Server we need to run salt-master
+		# If salt-master is DISABLED we need to enable it
+		[ -f /etc/init/salt-master.DISABLED ] && mv /etc/init/salt-master.DISABLED /etc/init/salt-master.conf
+		# Start salt-master
+		service salt-master restart >> $LOG 2>&1
+	else
+		# If this box is not a Master we need to disable salt-master
+		# Stop salt-master
+		service salt-master stop >> $LOG 2>&1
+		# Disable salt-master
+		[ -f /etc/init/salt-master.conf ] && mv /etc/init/salt-master.conf /etc/init/salt-master.DISABLED
+	fi
+
+	# All boxes run salt-minion
+	# Configure minion
+	echo "master: $SERVERNAME" > /etc/salt/minion.d/onionsalt.conf
+	# If salt-minion is DISABLED, enable it
+	[ -f /etc/init/salt-minion.DISABLED ] && mv /etc/init/salt-minion.DISABLED /etc/init/salt-minion.conf
+	service salt-minion restart >> $LOG 2>&1
+	ufw allow salt >> $LOG 2>&1
+
+	# salt-master needs to accept the key from salt-minion
+	if [ "$SERVERNAME" = "localhost" ]; then
+		salt-key -a $HOSTNAME -y >> $LOG 2>&1
+	else
+		echo "salt-key -a $HOSTNAME -y" >> /tmp/sosetupscp
+	fi
+fi
+
+#########################################
 # Configure ELSA
 #########################################
 if [ "$ELSA" = "YES" ]; then
