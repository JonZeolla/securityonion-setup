Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 securityonion-setup (20120912-0ubuntu0securityonion16) precise; urgency=low
 .
   * queue up ssh commands and run as single batch
Author: Doug Burks <doug.burks@gmail.com>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: http://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: <YYYY-MM-DD>

--- securityonion-setup-20120912.orig/bin/sosetup
+++ securityonion-setup-20120912/bin/sosetup
@@ -141,6 +141,7 @@ Quick Setup is recommended for first-tim
 \n\
 Advanced Setup is recommended for production deployments:\n\
 - gives you more control over the details of your system\n\
+- allows you to build a distributed sensor network\n\
 - you choose Sguil server, Sguil sensor, or both\n\
 - you choose which IDS engine to use (Snort or Suricata)\n\
 - you choose which IDS ruleset(s) to use (Emerging Threats, Snort VRT, or both)\n\
@@ -175,11 +176,11 @@ else
 	#########################################
 	TEXT="If this is the first machine in a distributed deployment, choose Server.\n\
 If this is a sensor for a distributed deployment (you've already installed the Server), choose Sensor.\n\
-If this is a standalone machine (Server and Sensor), choose Both."
-	COMPONENTS=`zenity --list --column="Component" --hide-header --title="$TITLE" --text="$TEXT" Server Sensor Both`
+Otherwise, choose Standalone to configure both Server and Sensor components."
+	COMPONENTS=`zenity --list --column="Component" --hide-header --title="$TITLE" --text="$TEXT" Server Sensor Standalone`
 	case $COMPONENTS in
-        Both)
-                [ $DEBUG -eq 1 ] && echo "DEBUG: Clicked Both."
+        Standalone)
+                [ $DEBUG -eq 1 ] && echo "DEBUG: Clicked Standalone"
 		SERVER=1
 		SENSOR=1
 		SERVERNAME="localhost"
@@ -211,10 +212,12 @@ If this is a standalone machine (Server
 	#########################################
 	# Ask which IDS engine to use.
 	#########################################
-       	TEXT="Which IDS Engine would you like to use?"
-	IDS_ENGINE=`zenity --list --column="Component" --hide-header --title="$TITLE" --text="$TEXT" Snort Suricata`
-	[ -z $IDS_ENGINE ] && exit 
-        [ $DEBUG -eq 1 ] && echo "DEBUG: User selected $IDS_ENGINE."
+	if [ "$SERVERNAME" = "localhost" ]; then
+       		TEXT="Which IDS Engine would you like to use?"
+		IDS_ENGINE=`zenity --list --column="Component" --hide-header --title="$TITLE" --text="$TEXT" Snort Suricata`
+		[ -z $IDS_ENGINE ] && exit 
+	        [ $DEBUG -eq 1 ] && echo "DEBUG: User selected $IDS_ENGINE."
+	fi
 
 	#########################################
 	# SENSOR-SPECIFIC
@@ -224,7 +227,7 @@ If this is a standalone machine (Server
 	# Ask which interface to listen on
 	#########################################
         if [ $NUM_INTERFACES -gt 1 ]; then
-		TEXT="Which network interface(s) should $IDS_ENGINE listen on?\n\
+		TEXT="Which network interface(s) should be monitored?\n\
 		\n\
 You may select multiple interfaces using the Ctrl/Shift keys."
 		INTERFACES=`cat "/proc/net/dev" | egrep "(eth|bond|wlan|br|ath|bge|mon|fe)[0-9]+" | awk '{print $1}' | cut -d\: -f1 | sort | zenity --list --column="Interface" --hide-header --title="$TITLE" --text="$TEXT" --multiple`
@@ -238,7 +241,7 @@ You may select multiple interfaces using
 		INTERFACES=`echo $INTERFACES | sed 's/|/ /g'`
 		[ $DEBUG -eq 1 ] &&  echo "DEBUG: Selected interfaces $INTERFACES."
 	fi
-	SENSOR_CONFIRM_1="- Configure $IDS_ENGINE and Bro to monitor each of the following interfaces:\n"
+	SENSOR_CONFIRM_1="- Monitor each of the following interfaces:\n"
 	SENSOR_CONFIRM_2="$INTERFACES\n"
 
 	# Determine number of cores and use that as a maximum value for IDS/Bro processes to run
@@ -246,7 +249,7 @@ You may select multiple interfaces using
 	
 	if [ "$CORES" -gt 1 ]; then
 	# IDS_LB_PROCS
-	TEXT="How many $IDS_ENGINE processes would you like to run?\n\
+	TEXT="How many IDS engine processes would you like to run?\n\
 	\n\
 This is limited by the number of CPU cores on your system.\n\
 \n\
@@ -259,7 +262,7 @@ If you need to change this setting later
                 [ $DEBUG -eq 1 ] && echo "DEBUG: Clicked Cancel.  Exiting."
                 exit
         fi
-	IDS_LB_PROCS_CONFIRM="- Run $IDS_LB_PROCS load-balanced $IDS_ENGINE processes per interface.\n"
+	IDS_LB_PROCS_CONFIRM="- Run $IDS_LB_PROCS load-balanced IDS engine processes per interface.\n"
 
 	# BRO_LB_PROCS
 	TEXT="How many Bro processes would you like to run?\n\
@@ -572,15 +575,6 @@ ln -s /etc/nsm/rules /nsm/server_data/"$
 fi
 
 #########################################
-# IDS Engine
-#########################################
-echo "43"
-echo "# Please wait while setting IDS Engine to $IDS_ENGINE..." | tee -a $LOG
-IDS_ENGINE_LOWER=`echo ${IDS_ENGINE,,}`
-echo "ENGINE=$IDS_ENGINE_LOWER" > $CONF
-echo "DAYSTOKEEP=365" >> $CONF
-
-#########################################
 # Sguil Sensor(s) if necessary
 #########################################
 if [ $SENSOR -eq 1 ]
@@ -608,8 +602,6 @@ then
         ssh-keygen -f "$KEY" -N '' >> $LOG 2>&1
         chmod 600 "$KEY"*
         xfce4-terminal -x ssh-copy-id -i "$KEY".pub $SSH_USERNAME@$SERVERNAME 
-	# May need to prompt the user for sudo password (this does not work anymore)
-	#xfce4-terminal -x ssh -i "$KEY" -t $SSH_USERNAME@$SERVERNAME sudo echo "Success!"
 	# Backup existing rules
 	mkdir -p /etc/nsm/rules/backup/
 	cp /etc/nsm/rules/downloaded.rules /etc/nsm/rules/backup/downloaded.rules.`date +%Y%m%d%H%M%S` >> $LOG 2>&1
@@ -620,6 +612,7 @@ then
 	# Save configuration
 	echo "SSH_USERNAME=$SSH_USERNAME" > $SSH_CONF
 	echo "SERVERNAME=$SERVERNAME" >> $SSH_CONF
+	IDS_ENGINE=`ssh -i "$KEY" -t $SSH_USERNAME@$SERVERNAME grep ENGINE /etc/nsm/securityonion.conf 2>/dev/null | cut -d\= -f2` >> $LOG 2>&1
 fi
 
 # NIDS sensor(s)
@@ -683,13 +676,15 @@ do
 	echo "IDS_LB_PROCS=$IDS_LB_PROCS" >> /etc/nsm/"$SENSORNAME"/sensor.conf
 
 	# Create symbolic link for sensor rules directory on server
-	if [ "$SERVERNAME" = "localhost" ]
-	then
+	if [ "$SERVERNAME" = "localhost" ]; then
         	ln -s /etc/nsm/rules /nsm/server_data/"$SGUIL_SERVER_NAME"/rules/"$SENSORNAME" >> $LOG 2>&1
 		for i in `seq 1 $CORES`; do ln -s /etc/nsm/rules /nsm/server_data/"$SGUIL_SERVER_NAME"/rules/"$SENSORNAME"-$i >> $LOG 2>&1; done
 	else
-		xfce4-terminal -x ssh -i "$KEY" -t $SSH_USERNAME@$SERVERNAME sudo ln -f -s /etc/nsm/rules /nsm/server_data/"$SGUIL_SERVER_NAME"/rules/"$SENSORNAME"
-		xfce4-terminal -x ssh -i "$KEY" -t $SSH_USERNAME@$SERVERNAME 'sudo /bin/bash for i in `seq 1 $CORES`; do ln -f -s /etc/nsm/rules /nsm/server_data/"$SGUIL_SERVER_NAME"/rules/"$SENSORNAME"-$i ; done'
+		COMMAND="ln -f -s /etc/nsm/rules /nsm/server_data/$SGUIL_SERVER_NAME/rules/$SENSORNAME"
+		for i in `seq 1 $CORES`; do
+			COMMAND="$COMMAND; ln -f -s /etc/nsm/rules /nsm/server_data/$SGUIL_SERVER_NAME/rules/$SENSORNAME-$i"
+		done
+		echo $COMMAND > /tmp/sosetupscp
 	fi
 
         # Configure snort.conf to log statistics to /nsm/sensor_data/"$SENSORNAME"/snort.stats
@@ -774,6 +769,15 @@ fi
 fi
 
 #########################################
+# IDS Engine
+#########################################
+echo "55"
+echo "# Please wait while setting IDS Engine to $IDS_ENGINE..." | tee -a $LOG
+IDS_ENGINE_LOWER=`echo ${IDS_ENGINE,,}`
+echo "ENGINE=$IDS_ENGINE_LOWER" > $CONF
+echo "DAYSTOKEEP=365" >> $CONF
+
+#########################################
 # Download rules using Pulledpork
 #########################################
 if [ "$SERVERNAME" = "localhost" ]; then
@@ -905,11 +909,26 @@ if [ "$ELSA" = "YES" ]; then
         /usr/bin/securityonion-elsa-config.sh -t LOG >> $LOG 2>&1
     fi
     if [ "$UPDATE_ELSA_SERVER" = "YES" ]; then
-	xfce4-terminal -x ssh -i "$KEY" -t $SSH_USERNAME@$SERVERNAME sudo "/usr/bin/securityonion_elsa_register.rb -f && service apache2 restart"
+	echo "/usr/bin/securityonion_elsa_register.rb -f && service apache2 restart" >> /tmp/sosetupscp
     fi
 fi
 
 #########################################
+# Send all queued commands to server
+#########################################
+if [ "$SERVERNAME" != "localhost" ]; then
+    	echo "95"
+    	echo "# Please wait while configuring server..." | tee -a $LOG
+	# Copy the script over
+	scp -i "$KEY" /tmp/sosetupscp $SSH_USERNAME@$SERVERNAME:/tmp/sosetupscp
+	# Run the script with sudo
+	xfce4-terminal -x ssh -i "$KEY" -t $SSH_USERNAME@$SERVERNAME sudo /bin/bash /tmp/sosetupscp
+	# Cleanup
+	rm -f /tmp/sosetupscp
+	ssh -i "$KEY" -t $SSH_USERNAME@$SERVERNAME rm -f /tmp/sosetupscp >> $LOG 2>&1
+fi
+
+#########################################
 # END Zenity Progress window
 #########################################
 ) |
