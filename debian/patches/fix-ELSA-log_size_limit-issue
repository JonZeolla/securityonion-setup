Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 securityonion-setup (20120912-0ubuntu0securityonion186) trusty; urgency=medium
 .
   * fix ELSA log_size_limit issue
Author: Doug Burks <doug.burks@gmail.com>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: http://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: <YYYY-MM-DD>

--- securityonion-setup-20120912.orig/bin/sosetup
+++ securityonion-setup-20120912/bin/sosetup
@@ -108,10 +108,19 @@ KEY="$SSH_DIR/securityonion"
 SOSETUPSCP=`mktemp`
 # SECURITYONION_CONF_MASTER is the securityonion.conf from the master server
 SECURITYONION_CONF_MASTER=`mktemp`
-# ELSA is now enabled by default
-ELSA="YES"
 # CUSTOM gives access to all options
 CUSTOM=0
+# ELSA is now enabled by default
+ELSA="YES"
+# Create /nsm if it doesn't already exist
+mkdir -p /nsm
+# Calculate half of available disk space for ELSA log_size_limit
+DISK_SIZE_K=`df /nsm |grep -v "^Filesystem" | awk '{print $2}'`
+let DISK_SIZE=DISK_SIZE_K*1000
+let LOG_SIZE_LIMIT=DISK_SIZE/2
+let LOG_SIZE_LIMIT_GB=LOG_SIZE_LIMIT/1000000000
+let DISK_SIZE_GB=DISK_SIZE/1000000000
+let LOG_SIZE_LIMIT=LOG_SIZE_LIMIT_GB*1000000000
 
 #########################################
 # Debug
@@ -776,14 +785,6 @@ Would you like to enable ELSA?"
 
 	# If user chose to enable ELSA, ask about log_size_limit
 	if [ "$ELSA" = "YES" ]; then
-		# Create /nsm if it doesn't already exist
-		mkdir -p /nsm
-		# Calculate half of available disk space
-		DISK_SIZE_K=`df /nsm |grep -v "^Filesystem" | awk '{print $2}'`
-		let DISK_SIZE=DISK_SIZE_K*1000
-		let LOG_SIZE_LIMIT=DISK_SIZE/2
-		let LOG_SIZE_LIMIT_GB=LOG_SIZE_LIMIT/1000000000
-		let DISK_SIZE_GB=DISK_SIZE/1000000000
 		# If Advanced Setup, ask user
 		if [ $ADVANCED_SETUP -eq 1 ]; then
 			LOG_SIZE_LIMIT_CONFIRMED="no"
