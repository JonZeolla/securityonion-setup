Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 securityonion-setup (20120912-0ubuntu0securityonion59) precise; urgency=low
 .
   * Advanced Setup asks about enabling snort, bro, and pcap
Author: Doug Burks <doug.burks@gmail.com>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: http://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: <YYYY-MM-DD>

--- securityonion-setup-20120912.orig/bin/sosetup
+++ securityonion-setup-20120912/bin/sosetup
@@ -1,6 +1,6 @@
 #!/bin/bash
 #
-# Copyright (C) 2010-2012 Security Onion
+# Copyright (C) 2010-2013 Doug Burks and Security Onion
 #
 # This program is free software; you can redistribute it and/or modify
 # it under the terms of the GNU General Public License Version 2 as
@@ -66,7 +66,6 @@
 # 20120910 - Numerous fixes for BDR
 # 20121116 - /etc/network/interfaces configuration by Matt Gregory
 
-
 #########################################
 # Variables
 #########################################
@@ -89,6 +88,15 @@ INTERFACES=`cat "/proc/net/dev" | egrep
 NUM_INTERFACES=`echo $INTERFACES | wc -w`
 SENSORTAB="/etc/nsm/sensortab"
 UPDATE_ELSA_SERVER="NO"
+# PCAP_OPTIONS are passed to netsniff-ng
+# "netsniff-ng -c" does the following:
+#   -c|--clrw                      Use slower read(2)/write(2) I/O
+# we set this as the default for classroom/training users
+# who are monitoring low-bandwidth networks and don't
+# want to wait for scatter/gather mode to write pcaps.
+# Users running Advanced Setup are likely on production networks
+# with higher bandwidth and want better performance, so we clear
+# PCAP_OPTIONS in the Advanced Setup section.
 PCAP_OPTIONS="-c"
 # PCAP_SIZE is the size at which we rotate to a new pcap file
 # Default to 150MB, but user can choose if running Advanced Setup
@@ -106,7 +114,10 @@ IDS_LB_PROCS_CONFIRM="- Run a single IDS
 # BRO_LB_PROCS goes into Bro's node.cfg and controls threads for Bro
 BRO_LB_PROCS=1
 BRO_LB_PROCS_CONFIRM="- Run a single Bro process per interface.\n"
-# Sensor services enabled by default
+# /etc/nsm/securityonion.conf services enabled by default
+BRO_ENABLED="yes"
+OSSEC_AGENT_ENABLED="yes"
+# /etc/nsm/HOSTNAME-INTERFACE/sensor.conf services enabled by default
 PCAP_ENABLED="yes"
 PCAP_AGENT_ENABLED="yes"
 SNORT_AGENT_ENABLED="yes"
@@ -144,8 +155,7 @@ YES="Yes, Continue!"
 NO="No, Quit."
 zenity --question --title="$TITLE" --text="$TEXT" --ok-label="$YES" --cancel-label="$NO" --no-wrap
 ANSWER="$?"
-if [ $ANSWER -eq 1 ]
-then
+if [ $ANSWER -eq 1 ]; then
         [ $DEBUG -eq 1 ] && echo "DEBUG: Clicked No."
         exit
 else
@@ -158,7 +168,7 @@ fi
 [ -f /usr/bin/sosetup-network ] && /usr/bin/sosetup-network
 
 #########################################
-# Quick Setup
+# Quick Setup or Advanced Setup
 #########################################
 TEXT="Would you like to use Quick Setup or Advanced Setup?\n\
 \n\
@@ -174,13 +184,13 @@ Advanced Setup is recommended for produc
 - you choose which IDS engine to use (Snort or Suricata)\n\
 - you choose which IDS ruleset(s) to use (Emerging Threats, Snort VRT, or both)\n\
 - you choose which network interfaces should be monitored by the IDS Engine and Bro\n\
-- you choose how many processes to run for Snort/Suricata/Bro"
+- you choose how many processes to run for Snort/Suricata/Bro\n\
+- you choose which sensor processes to enable/disable"
 YES="Quick Setup"
 NO="Advanced Setup"
 zenity --question --title="$TITLE" --text="$TEXT" --ok-label="$YES" --cancel-label="$NO" --no-wrap
 ADVANCED_SETUP="$?"
-if [ $ADVANCED_SETUP -eq 0 ]
-then
+if [ $ADVANCED_SETUP -eq 0 ]; then
 	[ $DEBUG -eq 1 ] && echo "DEBUG: Clicked Yes. Performing Quick Setup."
 	if [ $NUM_INTERFACES -gt 1 ]; then
 	        TEXT="Which network interface should be monitored?"
@@ -198,11 +208,8 @@ then
 	SENSOR_CONFIRM_1="- Configure Snort and Bro to monitor the following interface:\n"
 	SENSOR_CONFIRM_2="$INTERFACES\n"
 else
-        [ $DEBUG -eq 1 ] && echo "DEBUG: Clicked No. Performing Advanced Setup."
-	PCAP_OPTIONS=""
-        #########################################
+	[ $DEBUG -eq 1 ] && echo "DEBUG: Clicked No. Performing Advanced Setup."
 	# Ask which components to configure
-	#########################################
 	TEXT="If this is the first machine in a distributed deployment, choose Server.\n\
 This machine will only run Sguil, Squert, Snorby, and ELSA and will not monitor any network interfaces.\n\
 \n\
@@ -241,25 +248,149 @@ Otherwise, choose Standalone to configur
                 exit
                 ;;
         esac
+fi
+
+#########################################
+# If server is enabled, prompt for username/password
+#########################################
+if [ $SERVER -eq 1 ]; then
+
+	# Ask for Sguil client username
+	USERNAME_CONFIRMED="no"
+	while [ $USERNAME_CONFIRMED = "no" ]; do
+		TEXT="What would you like your Sguil username to be?\r\rThis will be used when logging into Sguil, Squert, and ELSA.\r\rPlease use alphanumeric characters only."
+		SGUIL_CLIENT_USERNAME=`zenity --title="$TITLE" --text="$TEXT" --entry`
+		[ x$SGUIL_CLIENT_USERNAME = "x" ] && exit
+		COMPRESSED="$(echo $SGUIL_CLIENT_USERNAME | sed -e 's/[^[:alnum:]]//g')"
+		if [ "$COMPRESSED" != "$SGUIL_CLIENT_USERNAME" ] ; then
+	    		zenity --error --text="Invalid username\! \r \
+\r \
+Please use alphanumeric characters only."
+		else
+	    		USERNAME_CONFIRMED="yes"
+		fi
+	done
+
+	# Ask for email address for Snorby
+	EMAIL_CONFIRMED="no"
+	while [ $EMAIL_CONFIRMED = "no" ]; do
+		TEXT="What is your email address?\r\rThis will be used when logging into Snorby."
+		SNORBY_EMAIL=`zenity --title="$TITLE" --text="$TEXT" --entry`
+		[ x$SNORBY_EMAIL = "x" ] && exit
+		if [[ "$SNORBY_EMAIL" != *?"@"?*.?* ]] ; then 
+			zenity --error --text="Invalid email address\! \r \
+\r \
+Please ensure your email address is of the form: \r \
+user@example.com"
+		else
+			EMAIL_CONFIRMED="yes"
+		fi
+	done
+
+	# Ask for and confirm Sguil client password
+	SGUIL_CLIENT_PASSWORD_CONFIRMED="no"
+	while [ $SGUIL_CLIENT_PASSWORD_CONFIRMED = "no" ]; do
+		TEXT="What would you like to set your password to?\n\
+\n\
+Password must be at least 6 characters.  Please use alphanumeric characters only!\n\
+\n\
+This password will be used for Sguil, Squert, Snorby, and ELSA.\n\
+\n\
+Once you've logged into these interfaces using this initial password, you can change it in Sguil and Snorby."
+		SGUIL_CLIENT_PASSWORD_1=`zenity --title="$TITLE" --text="$TEXT" --entry --hide-text`
+		[ "x$SGUIL_CLIENT_PASSWORD_1" = "x" ] && exit
+	        if [ "${#SGUIL_CLIENT_PASSWORD_1}" -lt "6" ]; then
+			zenity --error --text="Password must be at least 6 characters\!"
+		else
+			COMPRESSED="$(echo $SGUIL_CLIENT_PASSWORD_1 | sed -e 's/[^[:alnum:]]//g')"
+               		if [ "$COMPRESSED" != "$SGUIL_CLIENT_PASSWORD_1" ] ; then
+                       		zenity --error --text="Invalid password\! \r \
+\r \
+Please use alphanumeric characters only."
+			else
+				TEXT="Please confirm what you would like to set your password to."
+				SGUIL_CLIENT_PASSWORD_2=`zenity --title="$TITLE" --text="$TEXT" --entry --hide-text`
+				[ "x$SGUIL_CLIENT_PASSWORD_2" = "x" ] && exit
+				if [ "$SGUIL_CLIENT_PASSWORD_1" = "$SGUIL_CLIENT_PASSWORD_2" ]; then
+					SGUIL_CLIENT_PASSWORD_CONFIRMED="yes"
+				else
+				        zenity --error --text="Passwords didn't match\!"
+				fi
+			fi
+		fi
+	done
+	SERVER_CONFIRM="- Create a Sguil server named $SGUIL_SERVER_NAME. \n"
+	SERVER_USER_CONFIRM="- Create a Sguil user named $SGUIL_CLIENT_USERNAME. \n"
+	SNORBY_USER_CONFIRM="- Create a Snorby user named $SNORBY_EMAIL. \n"
+fi
+
+#########################################
+# ADVANCED SETUP - SERVER
+#########################################
+if [ $ADVANCED_SETUP -eq 1 ] && [ $SERVER -eq 1 ]; then
 
-	#########################################
 	# Ask which IDS engine to use.
-	#########################################
-	if [ "$SERVERNAME" = "localhost" ]; then
-       		TEXT="Which IDS Engine would you like to use?"
-		IDS_ENGINE=`zenity --list --column="Component" --hide-header --title="$TITLE" --text="$TEXT" Snort Suricata`
-		[ -z $IDS_ENGINE ] && exit 
-	        [ $DEBUG -eq 1 ] && echo "DEBUG: User selected $IDS_ENGINE."
-	fi
+	TEXT="Which IDS Engine would you like to use?"
+	IDS_ENGINE=`zenity --list --column="Component" --hide-header --title="$TITLE" --text="$TEXT" Snort Suricata`
+	[ -z $IDS_ENGINE ] && exit 
+        [ $DEBUG -eq 1 ] && echo "DEBUG: User selected $IDS_ENGINE."
 
-	#########################################
-	# SENSOR-SPECIFIC
-	#########################################
-	if [ $SENSOR -eq 1 ]; then
+	# Ask which IDS ruleset to use.
+	TEXT="Which IDS ruleset would you like to use?"
+	IDS_RULESET=`zenity --width=600 --height=300 --list --column="Ruleset" --column="Ruleset" --column="Oinkcode required?" --hide-column="1" --text="$TEXT" --title="$TITLE" \
+	"ETGPL" "Emerging Threats GPL"  "no oinkcode required" \
+	"ETPRO" "Emerging Threats PRO" "requires ETPRO oinkcode" \
+	"VRTET" "Snort VRT ruleset and Emerging Threats NoGPL ruleset" "requires Snort VRT oinkcode" \
+	"VRT" "Snort VRT ruleset only and set a VRT policy" "requires Snort VRT oinkcode" `
+
+	case $IDS_RULESET in
+	ETGPL)
+		[ $DEBUG -eq 1 ] &&  echo "DEBUG: Selecting Emerging Threats GPL ruleset."
+		IDS_RULESET_ACTION="- Download Emerging Threats GPL ruleset.\n"
+		;;
+	ETPRO)
+		[ $DEBUG -eq 1 ] && echo "DEBUG: Selecting ETPRO ruleset." 
+		TEXT="Please enter your Emerging Threats Pro oinkcode.\n\nIf you don't already have one, you can purchase one from http://www.emergingthreatspro.com/."
+		OINKCODE=`zenity --entry --title="Emerging Threats Pro Oinkcode" --text="$TEXT"`
+		[ $DEBUG -eq 1 ] && echo "DEBUG: Entered ETPRO oinkcode $OINKCODE"
+		IDS_RULESET_ACTION="- Download ETPRO ruleset using oinkcode $OINKCODE.\n"
+		;;
+	VRT)
+		[ $DEBUG -eq 1 ] && echo "DEBUG: Selecting Snort VRT ruleset only and setting a VRT policy."
+		TEXT="Please enter your Snort VRT oinkcode.\n\nIf you don't already have one, you can obtain one from http://www.snort.org/."
+		OINKCODE=`zenity --entry --title="Snort VRT Oinkcode" --text="$TEXT"`
+		[ $DEBUG -eq 1 ] && echo "DEBUG: Entered Snort VRT oinkcode $OINKCODE"
+		VRT_POLICY=`zenity --list --column="VRT Policy" --text="Please choose a VRT policy." --title="VRT Policy" \
+		"connectivity" \
+		"balanced" \
+		"security" `
+		[ $DEBUG -eq 1 ] && echo "DEBUG: Selected Snort VRT policy $VRT_POLICY"
+		IDS_RULESET_ACTION="- Download the Snort VRT ruleset using oinkcode $OINKCODE.\n- Set VRT policy to $VRT_POLICY.\n"
+		;;
+	VRTET)
+		[ $DEBUG -eq 1 ] && echo "DEBUG: Selecting Snort VRT and Emerging Threats NoGPL ruleset."
+		TEXT="Please enter your Snort VRT oinkcode.\n\nIf you don't already have one, you can obtain one from http://www.snort.org/."
+		OINKCODE=`zenity --entry --title="Snort VRT Oinkcode" --text="$TEXT"`
+		[ $DEBUG -eq 1 ] && echo "DEBUG: Entered Snort VRT oinkcode $OINKCODE"
+		IDS_RULESET_ACTION="- Download the Snort VRT ruleset using oinkcode $OINKCODE.\n- Download the Emerging Threats NoGPL ruleset.\n"
+		;;
+	*)
+		[ $DEBUG -eq 1 ] && echo "DEBUG: Clicked Cancel.  Exiting."
+		exit
+		;;
+	esac
+	# End of ADVANCED SETUP - SERVER
+fi
+
+#########################################
+# ADVANCED SETUP - SENSOR
+#########################################
+if [ $ADVANCED_SETUP -eq 1 ] && [ $SENSOR -eq 1 ]; then
 	
-	#########################################
-	# Ask which interface to listen on
-	#########################################
+	# Remove "-c" from PCAP_OPTIONS for better performance on production networks
+	PCAP_OPTIONS=""
+
+	# Ask which interface(s) to listen on
         if [ $NUM_INTERFACES -gt 1 ]; then
 		TEXT="Which network interface(s) should be monitored?"
 		INTERFACES=`cat "/proc/net/dev" | egrep "(eth|bond|wlan|br|ath|bge|mon|fe)[0-9]+" | awk '{print $1}' | cut -d\: -f1 | sort`
@@ -274,10 +405,100 @@ Otherwise, choose Standalone to configur
 	SENSOR_CONFIRM_1="- Monitor each of the following interfaces:\n"
 	SENSOR_CONFIRM_2="$INTERFACES\n"
 
-	#########################################
+	# Determine number of cores and use that as a maximum value for IDS/Bro processes to run
+	LIST=`seq 1 $CORES`; SELECTIONS=`for i in $LIST; do echo "FALSE $i"; done`
+
+	# IDS Engine
+	TEXT="The IDS Engine (Snort/Suricata) listens on the interfaces\n\
+specified on the previous screen and logs IDS alerts.\n\
+\n\
+Would you like to enable the IDS Engine?"
+	YES="Yes, enable the IDS Engine!"
+	NO="No, disable the IDS Engine."
+	zenity --question --title="$TITLE" --text="$TEXT" --ok-label="$YES" --cancel-label="$NO" --no-wrap
+	ANSWER="$?"
+	if [ $ANSWER -eq 1 ]; then
+        	[ $DEBUG -eq 1 ] && echo "DEBUG: Clicked No."
+		IDS_ENGINE_ENABLED="no"
+		BARNYARD2_ENABLED="no"
+		SNORT_AGENT_ENABLED="no"
+	else
+        	[ $DEBUG -eq 1 ] && echo "DEBUG: Clicked Yes."
+	fi
+
+	# IDS Engine Procs
+	if [ "$IDS_ENGINE_ENABLED" == "yes" ] && [ "$CORES" -gt 1 ]; then
+		TEXT="How many IDS engine processes would you like to run?\n\
+\n\
+This is limited by the number of CPU cores on your system.\n\
+\n\
+If you need to change this setting later, change IDS_LB_PROCS in /etc/nsm/HOSTNAME-INTERFACE/sensor.conf"
+		IDS_LB_PROCS=`zenity --list --radiolist --column "" --column "" $SELECTIONS --hide-header --text="$TEXT" --title="$TITLE"`
+		if [ "$IDS_LB_PROCS" = "" ]; then
+		        [ $DEBUG -eq 1 ] && echo "DEBUG: Clicked Cancel.  Exiting."
+		        exit
+		fi
+		IDS_LB_PROCS_CONFIRM="- Run $IDS_LB_PROCS load-balanced IDS engine processes per interface.\n"
+	fi
+
+	# Bro
+	TEXT="Bro listens on the chosen interfaces and writes protocol logs.\n\
+\n\
+Would you like to enable Bro?"
+	YES="Yes, enable Bro!"
+	NO="No, disable Bro."
+	zenity --question --title="$TITLE" --text="$TEXT" --ok-label="$YES" --cancel-label="$NO" --no-wrap
+	ANSWER="$?"
+	if [ $ANSWER -eq 1 ]; then
+        	[ $DEBUG -eq 1 ] && echo "DEBUG: Clicked No."
+		BRO_ENABLED="no"
+		HTTP_AGENT_ENABLED="no"
+	else
+        	[ $DEBUG -eq 1 ] && echo "DEBUG: Clicked Yes."
+	fi
+
+	# BRO_LB_PROCS
+	if [ "$BRO_ENABLED" == "yes" ] && [ "$CORES" -gt 1 ]; then
+		TEXT="How many Bro processes would you like to run?\n\
+\n\
+This is limited by the total number of CPU cores on your system,\n\
+but you should probably choose no more than HALF your number of CPU cores.\n\
+\n\
+If you need to change this setting later, you can change the lb_procs variable in /opt/bro/etc/node.cfg.\n\
+\n\
+Please note there is a bug in Bro 2.1 when monitoring multiple interfaces with PF_RING that results in traffic loss.\n\
+If you're monitoring multiple interfaces, we'll configure Bro to disable PF_RING load balancing to avoid this issue.\n\
+We'll record your desired number of PF_RING CPU cores for when Bro 2.2 is released."
+		BRO_LB_PROCS=`zenity --list --radiolist --column "" --column "" $SELECTIONS --hide-header --text="$TEXT" --title="$TITLE"`
+		if [ "$BRO_LB_PROCS" = "" ]; then
+			[ $DEBUG -eq 1 ] && echo "DEBUG: Clicked Cancel.  Exiting."
+			exit
+		fi
+		BRO_LB_PROCS_CONFIRM="- Run $BRO_LB_PROCS load-balanced Bro processes per interface.\n"
+	fi
+
+	# http_agent
+	if [ "$BRO_ENABLED" == "yes" ]; then
+		TEXT="http_agent sends Bro's http.log to the Sguil database.\n\
+\n\
+If you plan to access Bro's http.log via ELSA,\n\
+you may want to disable http_agent to avoid duplication of effort.\n\
+\n\
+Would you like to enable http_agent?"
+		YES="Yes, enable http__agent!"
+		NO="No, disable http__agent."
+		zenity --question --title="$TITLE" --text="$TEXT" --ok-label="$YES" --cancel-label="$NO" --no-wrap
+		ANSWER="$?"
+		if [ $ANSWER -eq 1 ]; then
+			[ $DEBUG -eq 1 ] && echo "DEBUG: Clicked No."
+			HTTP_AGENT_ENABLED="no"
+		else
+			[ $DEBUG -eq 1 ] && echo "DEBUG: Clicked Yes."
+		fi
+	fi
+
 	# Argus
-	#########################################
-	TEXT="Argus logs session data to the filesystem.\n\
+	TEXT="Argus listens on the chosen interfaces and logs session data to the filesystem.\n\
 \n\
 If you plan to use other forms of session data (like Bro's conn.log or Prads),\n\
 you may want to disable Argus to avoid duplication of effort.\n\
@@ -294,10 +515,8 @@ Would you like to enable Argus?"
         	[ $DEBUG -eq 1 ] && echo "DEBUG: Clicked Yes."
 	fi
 
-	#########################################
 	# Prads
-	#########################################
-	TEXT="Prads provides session and asset data for Sguil.\n\
+	TEXT="Prads listens on the chosen interfaces and provides session and asset data for Sguil.\n\
 \n\
 If you plan to use other forms of session data (like Bro's conn.log or Argus)\n\
 and/or you plan to use other forms of asset data (like Bro's software.log),\n\
@@ -317,47 +536,45 @@ Would you like to enable Prads?"
         	[ $DEBUG -eq 1 ] && echo "DEBUG: Clicked Yes."
 	fi
 
-	#########################################
-	# http_agent
-	#########################################
-	TEXT="http_agent sends Bro's http.log to the Sguil database.\n\
+	# PCAP
+	TEXT="Full packet capture writes all monitored traffic to disk.\n\
 \n\
-If you plan to access Bro's http.log via ELSA,\n\
-you may want to disable http_agent to avoid duplication of effort.\n\
-\n\
-Would you like to enable http_agent?"
-	YES="Yes, enable http__agent!"
-	NO="No, disable http__agent."
+Full packet capture requires lots of disk space,\n\
+but gives you lots of forensic capabilities\n\
+and is therefore highly recommended!\n\
+\n\
+Would you like to enable full packet capture?"
+	YES="Yes, enable full packet capture!"
+	NO="No, disable full packet capture."
 	zenity --question --title="$TITLE" --text="$TEXT" --ok-label="$YES" --cancel-label="$NO" --no-wrap
 	ANSWER="$?"
 	if [ $ANSWER -eq 1 ]; then
         	[ $DEBUG -eq 1 ] && echo "DEBUG: Clicked No."
-		HTTP_AGENT_ENABLED="no"
+		PCAP_ENABLED="no"
+		PCAP_AGENT_ENABLED="no"
 	else
         	[ $DEBUG -eq 1 ] && echo "DEBUG: Clicked Yes."
 	fi
 
-	#########################################
 	# Ask for PCAP_SIZE
-	#########################################
-	PCAP_SIZE_CONFIRMED="no"
-	while [ $PCAP_SIZE_CONFIRMED = "no" ]; do
-		PCAP_SIZE=`zenity --entry --title "$TITLE" --text="How big do you want your pcap files to be?\n\nPlease enter an integer in Megabytes (MB).\n\nThe default is 150 MB." --entry-text=150`
-		[ x$PCAP_SIZE = "x" ] && exit
-		COMPRESSED="$(echo $PCAP_SIZE | sed -e 's/[^[:digit:]]//g')"
-		if [ "$COMPRESSED" != "$PCAP_SIZE" ]; then
-			zenity --error --text "Invalid MB Value! Please use integers only." 
-		else
-			PCAP_SIZE_CONFIRMED="yes"
-		fi
-	done
+	if [ "$PCAP_ENABLED" == "yes" ]; then
+		PCAP_SIZE_CONFIRMED="no"
+		while [ $PCAP_SIZE_CONFIRMED = "no" ]; do
+			PCAP_SIZE=`zenity --entry --title "$TITLE" --text="How big do you want your pcap files to be?\n\nPlease enter an integer in Megabytes (MB).  The default is 150 MB." --entry-text=150`
+			[ x$PCAP_SIZE = "x" ] && exit
+			COMPRESSED="$(echo $PCAP_SIZE | sed -e 's/[^[:digit:]]//g')"
+			if [ "$COMPRESSED" != "$PCAP_SIZE" ]; then
+				zenity --error --text "Invalid MB Value! Please use integers only." 
+			else
+				PCAP_SIZE_CONFIRMED="yes"
+			fi
+		done
+	fi
 
-	#########################################
 	# Ask for CRIT_DISK_USAGE
-	#########################################
 	CRIT_DISK_USAGE_CONFIRMED="no"
 	while [ $CRIT_DISK_USAGE_CONFIRMED = "no" ]; do
-		CRIT_DISK_USAGE=`zenity --entry --title "$TITLE" --text="At what percent of disk usage would you like to begin purging old logs?\n\nPlease enter an integer between 10 and 100.\n\nThe default is 90." --entry-text=90`
+		CRIT_DISK_USAGE=`zenity --entry --title "$TITLE" --text="At what percent of disk usage would you like to begin purging old logs?\n\nPlease enter an integer between 10 and 100.  The default is 90." --entry-text=90`
 		[ x$CRIT_DISK_USAGE = "x" ] && exit
 		COMPRESSED="$(echo $CRIT_DISK_USAGE | sed -e 's/[^[:digit:]]//g')"
 		[ "$COMPRESSED" == "$CRIT_DISK_USAGE" ] && 
@@ -368,174 +585,10 @@ Would you like to enable http_agent?"
 	done
 	let WARN_DISK_USAGE=${CRIT_DISK_USAGE}-10
 
-	#########################################
-	# Ask for number of IDS/Bro processes
-	#########################################
-	# Determine number of cores and use that as a maximum value for IDS/Bro processes to run
-	LIST=`seq 1 $CORES`; SELECTIONS=`for i in $LIST; do echo "FALSE $i"; done`
-	
-	if [ "$CORES" -gt 1 ]; then
-	# IDS_LB_PROCS
-	TEXT="How many IDS engine processes would you like to run?\n\
-	\n\
-This is limited by the number of CPU cores on your system.\n\
-\n\
-If you need to change this setting later, change IDS_LB_PROCS in /etc/nsm/HOSTNAME-INTERFACE/sensor.conf"
-	IDS_LB_PROCS=`zenity --list --radiolist --column "" --column "" $SELECTIONS --hide-header --text="$TEXT" --title="$TITLE"`
-	if [ "$IDS_LB_PROCS" = "" ]
-        then
-                [ $DEBUG -eq 1 ] && echo "DEBUG: Clicked Cancel.  Exiting."
-                exit
-        fi
-	IDS_LB_PROCS_CONFIRM="- Run $IDS_LB_PROCS load-balanced IDS engine processes per interface.\n"
-
-	# BRO_LB_PROCS
-	TEXT="How many Bro processes would you like to run?\n\
-\n\
-This is limited by the total number of CPU cores on your system,\n\
-but you should probably choose no more than HALF your number of CPU cores.\n\
-\n\
-If you need to change this setting later, you can change the lb_procs variable in /opt/bro/etc/node.cfg.\n\
-\n\
-Please note there is a bug in Bro 2.1 when monitoring multiple interfaces with PF_RING that results in traffic loss.\n\
-If you're monitoring multiple interfaces, we'll configure Bro to disable PF_RING load balancing to avoid this issue.\n\
-We'll record your desired number of PF_RING CPU cores for when Bro 2.2 is released."
-	BRO_LB_PROCS=`zenity --list --radiolist --column "" --column "" $SELECTIONS --hide-header --text="$TEXT" --title="$TITLE"`
-	if [ "$BRO_LB_PROCS" = "" ]
-        then
-                [ $DEBUG -eq 1 ] && echo "DEBUG: Clicked Cancel.  Exiting."
-                exit
-        fi
-	BRO_LB_PROCS_CONFIRM="- Run $BRO_LB_PROCS load-balanced Bro processes per interface.\n"
-	fi # End if CORES > 1
-
-	# End IF SENSOR=1
-	fi 
-
-	#########################################
-	# Ask which IDS ruleset to use.
-	#########################################
-	if [ "$SERVERNAME" = "localhost" ]
-	then
-	TEXT="Which IDS ruleset would you like to use?"
-	IDS_RULESET=`zenity --width=600 --height=300 --list --column="Ruleset" --column="Ruleset" --column="Oinkcode required?" --hide-column="1" --text="$TEXT" --title="$TITLE" \
-	"ETGPL" "Emerging Threats GPL"  "no oinkcode required" \
-	"ETPRO" "Emerging Threats PRO" "requires ETPRO oinkcode" \
-	"VRTET" "Snort VRT ruleset and Emerging Threats NoGPL ruleset" "requires Snort VRT oinkcode" \
-	"VRT" "Snort VRT ruleset only and set a VRT policy" "requires Snort VRT oinkcode" `
-
-	case $IDS_RULESET in
-	ETGPL)
-        	[ $DEBUG -eq 1 ] &&  echo "DEBUG: Selecting Emerging Threats GPL ruleset."
-        	IDS_RULESET_ACTION="- Download Emerging Threats GPL ruleset.\n"
-        	;;
-	ETPRO)
-        	[ $DEBUG -eq 1 ] && echo "DEBUG: Selecting ETPRO ruleset." 
-	        TEXT="Please enter your Emerging Threats Pro oinkcode.\n\nIf you don't already have one, you can purchase one from http://www.emergingthreatspro.com/."
-	        OINKCODE=`zenity --entry --title="Emerging Threats Pro Oinkcode" --text="$TEXT"`
-	        [ $DEBUG -eq 1 ] && echo "DEBUG: Entered ETPRO oinkcode $OINKCODE"
-	        IDS_RULESET_ACTION="- Download ETPRO ruleset using oinkcode $OINKCODE.\n"
-        	;;
-	VRT)
-        	[ $DEBUG -eq 1 ] && echo "DEBUG: Selecting Snort VRT ruleset only and setting a VRT policy."
-	        TEXT="Please enter your Snort VRT oinkcode.\n\nIf you don't already have one, you can obtain one from http://www.snort.org/."
-	        OINKCODE=`zenity --entry --title="Snort VRT Oinkcode" --text="$TEXT"`
-	        [ $DEBUG -eq 1 ] && echo "DEBUG: Entered Snort VRT oinkcode $OINKCODE"
-	        VRT_POLICY=`zenity --list --column="VRT Policy" --text="Please choose a VRT policy." --title="VRT Policy" \
-	        "connectivity" \
-	        "balanced" \
-	        "security" `
-	        [ $DEBUG -eq 1 ] && echo "DEBUG: Selected Snort VRT policy $VRT_POLICY"
-	        IDS_RULESET_ACTION="- Download the Snort VRT ruleset using oinkcode $OINKCODE.\n- Set VRT policy to $VRT_POLICY.\n"
-        	;;
-	VRTET)
-        	[ $DEBUG -eq 1 ] && echo "DEBUG: Selecting Snort VRT and Emerging Threats NoGPL ruleset."
-	        TEXT="Please enter your Snort VRT oinkcode.\n\nIf you don't already have one, you can obtain one from http://www.snort.org/."
-	        OINKCODE=`zenity --entry --title="Snort VRT Oinkcode" --text="$TEXT"`
-	        [ $DEBUG -eq 1 ] && echo "DEBUG: Entered Snort VRT oinkcode $OINKCODE"
-	        IDS_RULESET_ACTION="- Download the Snort VRT ruleset using oinkcode $OINKCODE.\n- Download the Emerging Threats NoGPL ruleset.\n"
-        	;;
-	*)
-        	[ $DEBUG -eq 1 ] && echo "DEBUG: Clicked Cancel.  Exiting."
-        	exit
-	        ;;
-	esac
-	fi
-fi
-
-if [ $SERVER -eq 1 ]
-then
-	#########################################
-	# Sguil Server
-	#########################################
-	# Ask for Sguil client username
-	USERNAME_CONFIRMED="no"
-	while [ $USERNAME_CONFIRMED = "no" ]; do
-		TEXT="What would you like your Sguil username to be?\r\rThis will be used when logging into Sguil, Squert, and ELSA.\r\rPlease use alphanumeric characters only."
-		SGUIL_CLIENT_USERNAME=`zenity --title="$TITLE" --text="$TEXT" --entry`
-		[ x$SGUIL_CLIENT_USERNAME = "x" ] && exit
-		COMPRESSED="$(echo $SGUIL_CLIENT_USERNAME | sed -e 's/[^[:alnum:]]//g')"
-		if [ "$COMPRESSED" != "$SGUIL_CLIENT_USERNAME" ] ; then
-	    		zenity --error --text="Invalid username\! \r \
-\r \
-Please use alphanumeric characters only."
-		else
-	    		USERNAME_CONFIRMED="yes"
-		fi
-	done
-
-	# Ask for email address for Snorby
-	EMAIL_CONFIRMED="no"
-	while [ $EMAIL_CONFIRMED = "no" ]; do
-		TEXT="What is your email address?\r\rThis will be used when logging into Snorby."
-		SNORBY_EMAIL=`zenity --title="$TITLE" --text="$TEXT" --entry`
-		[ x$SNORBY_EMAIL = "x" ] && exit
-		if [[ "$SNORBY_EMAIL" != *?"@"?*.?* ]] ; then 
-			zenity --error --text="Invalid email address\! \r \
-\r \
-Please ensure your email address is of the form: \r \
-user@example.com"
-		else
-			EMAIL_CONFIRMED="yes"
-		fi
-	done
+	# End of ADVANCED SETUP - SENSOR
+fi 
 
-	# Ask for and confirm Sguil client password
-	SGUIL_CLIENT_PASSWORD_CONFIRMED="no"
-	while [ $SGUIL_CLIENT_PASSWORD_CONFIRMED = "no" ]; do
-		TEXT="What would you like to set your password to?\n\
-\n\
-Password must be at least 6 characters.  Please use alphanumeric characters only!\n\
-\n\
-This password will be used for Sguil, Squert, Snorby, and ELSA.\n\
-\n\
-Once you've logged into these interfaces using this initial password, you can change it in Sguil and Snorby."
-		SGUIL_CLIENT_PASSWORD_1=`zenity --title="$TITLE" --text="$TEXT" --entry --hide-text`
-		[ "x$SGUIL_CLIENT_PASSWORD_1" = "x" ] && exit
-	        if [ "${#SGUIL_CLIENT_PASSWORD_1}" -lt "6" ]; then
-			zenity --error --text="Password must be at least 6 characters\!"
-		else
-			COMPRESSED="$(echo $SGUIL_CLIENT_PASSWORD_1 | sed -e 's/[^[:alnum:]]//g')"
-               		if [ "$COMPRESSED" != "$SGUIL_CLIENT_PASSWORD_1" ] ; then
-                       		zenity --error --text="Invalid password\! \r \
-\r \
-Please use alphanumeric characters only."
-			else
-				TEXT="Please confirm what you would like to set your password to."
-				SGUIL_CLIENT_PASSWORD_2=`zenity --title="$TITLE" --text="$TEXT" --entry --hide-text`
-				[ "x$SGUIL_CLIENT_PASSWORD_2" = "x" ] && exit
-				if [ "$SGUIL_CLIENT_PASSWORD_1" = "$SGUIL_CLIENT_PASSWORD_2" ]; then
-					SGUIL_CLIENT_PASSWORD_CONFIRMED="yes"
-				else
-				        zenity --error --text="Passwords didn't match\!"
-				fi
-			fi
-		fi
-	done
-	SERVER_CONFIRM="- Create a Sguil server named $SGUIL_SERVER_NAME. \n"
-	SERVER_USER_CONFIRM="- Create a Sguil user named $SGUIL_CLIENT_USERNAME. \n"
-	SNORBY_USER_CONFIRM="- Create a Snorby user named $SNORBY_EMAIL. \n"
-fi
+# End of ADVANCED SETUP
 
 #########################################
 # Ask whether or not to use ELSA
@@ -551,35 +604,35 @@ NO="No, disable ELSA."
 zenity --question --title="$TITLE" --text="$TEXT" --ok-label="$YES" --cancel-label="$NO" --no-wrap
 ANSWER="$?"
 if [ $ANSWER -eq 0 ]; then
-    [ $DEBUG -eq 1 ] && echo "DEBUG: Enable ELSA."
-    ELSA="YES"
+	[ $DEBUG -eq 1 ] && echo "DEBUG: Enable ELSA."
+	ELSA="YES"
 else
-    [ $DEBUG -eq 1 ] && echo "DEBUG: Disable ELSA."
-    ELSA="NO"
+	[ $DEBUG -eq 1 ] && echo "DEBUG: Disable ELSA."
+	ELSA="NO"
 fi
 if [ "$ELSA" = "YES" ]; then
-  if [ $SERVER -eq 1 ]; then
-    	ELSA_ACTION_CONFIRM="- Configure ELSA as both a Log Node and Web Node.\n"
-  else
-    	ELSA_ACTION_CONFIRM="- Configure ELSA as a Log Node.\n"
-	# Ask if they want to update the SERVER and restart Apache
-	TEXT="Would you like to automatically update the ELSA server?\n\
+	if [ $SERVER -eq 1 ]; then
+	    	ELSA_ACTION_CONFIRM="- Configure ELSA as both a Log Node and Web Node.\n"
+	else
+    		ELSA_ACTION_CONFIRM="- Configure ELSA as a Log Node.\n"
+		# Ask if they want to update the SERVER and restart Apache
+		TEXT="Would you like to automatically update the ELSA server?\n\
 \n\
 This will restart Apache on the ELSA server and may disrupt any user sessions."
-	YES="Yes, update ELSA server!"
-	NO="No, do not update ELSA server."
-	zenity --question --title="$TITLE" --text="$TEXT" --ok-label="$YES" --cancel-label="$NO"
-	ANSWER="$?"
-	if [ $ANSWER -eq 0 ]; then
-	    	[ $DEBUG -eq 1 ] && echo "DEBUG: Update ELSA Server."
-    		UPDATE_ELSA_SERVER="YES"
-	else
-		[ $DEBUG -eq 1 ] && echo "DEBUG: Do not update ELSA server."
-    		UPDATE_ELSA_SERVER="NO"
-	fi
-  fi
+		YES="Yes, update ELSA server!"
+		NO="No, do not update ELSA server."
+		zenity --question --title="$TITLE" --text="$TEXT" --ok-label="$YES" --cancel-label="$NO"
+		ANSWER="$?"
+		if [ $ANSWER -eq 0 ]; then
+		    	[ $DEBUG -eq 1 ] && echo "DEBUG: Update ELSA Server."
+    			UPDATE_ELSA_SERVER="YES"
+		else
+			[ $DEBUG -eq 1 ] && echo "DEBUG: Do not update ELSA server."
+    			UPDATE_ELSA_SERVER="NO"
+		fi
+  	fi
 else
-  ELSA_ACTION_CONFIRM="- Disable ELSA."
+	ELSA_ACTION_CONFIRM="- Disable ELSA."
 fi
 
 #########################################
@@ -607,8 +660,7 @@ YES="Yes, proceed with the changes!"
 NO="No, do not make changes!"
 zenity --question --no-wrap --title="$TITLE" --text="$TEXT" --ok-label="$YES" --cancel-label="$NO"
 ANSWER="$?"
-if [ $ANSWER -eq 1 ]
-then
+if [ $ANSWER -eq 1 ]; then
         [ $DEBUG -eq 1 ] && echo "DEBUG: Clicked No. Do not proceed."
         exit
 else
@@ -622,11 +674,18 @@ fi
 (
 
 #########################################
+# Remove any tmp files from previous run
+#########################################
+rm -f /tmp/GeoIP.dat
+rm -f /tmp/GeoLiteCity.dat
+rm -f /tmp/GeoLiteCity.dat.gz
+
+#########################################
 # Create files/dirs as necessary
 #########################################
+touch $LOG
 touch $SENSORTAB
 mkdir -p /var/log/nsm/
-touch $LOG
 
 #########################################
 # Set OS timezone to UTC
@@ -703,8 +762,7 @@ pkill -f ossec_agent
 #########################################
 # Add the Sguil server if necessary
 #########################################
-if [ $SERVER -eq 1 ]
-then
+if [ $SERVER -eq 1 ]; then
 # If this box was previously a slave, we need to remove securityonion_ssh.conf
 rm -f /root/.ssh/securityonion_ssh.conf
 echo "20"
@@ -749,16 +807,14 @@ fi
 #########################################
 # Sguil Sensor(s) if necessary
 #########################################
-if [ $SENSOR -eq 1 ]
-then
+if [ $SENSOR -eq 1 ]; then
 echo "47"
 echo "# Please wait while creating Sguil sensor(s)..." | tee -a $LOG
 BY2PORT=8000
 HOSTNAME=`hostname`
 
 # Configure SSH Key authentication to server if necessary
-if [ "$SERVERNAME" != "localhost" ]
-then
+if [ "$SERVERNAME" != "localhost" ]; then
 	SSH_DIR="/root/.ssh"
 	SSH_CONF="$SSH_DIR/securityonion_ssh.conf"
 	mkdir -p $SSH_DIR		
@@ -795,8 +851,7 @@ then
 fi
 
 # NIDS sensor(s)
-for INTERFACE in $INTERFACES
-do	
+for INTERFACE in $INTERFACES; do	
 	SENSORNAME="$HOSTNAME-$INTERFACE"
 	echo "# Please wait while creating Sguil sensor: $SENSORNAME..." | tee -a $LOG
         [ $DEBUG -eq 1 ] && echo "DEBUG: Adding Sensor $INTERFACE."
@@ -886,8 +941,7 @@ do
 done
 
 # Bro
-if grep -v "^#" $SENSORTAB > /dev/null
-then
+if grep -v "^#" $SENSORTAB > /dev/null; then
 	# If user selected Quick Setup, do standalone config.
 	# Otherwise, do cluster config.
 	if [ $ADVANCED_SETUP -eq 0 ]; then
@@ -964,15 +1018,17 @@ fi
 fi
 
 #########################################
-# IDS Engine
+# /etc/nsm/securityonion.conf
 #########################################
 echo "55"
-echo "# Please wait while setting IDS Engine to $IDS_ENGINE..." | tee -a $LOG
+echo "# Please wait while configuring $CONF..." | tee -a $LOG
 IDS_ENGINE_LOWER=`echo ${IDS_ENGINE,,}`
-echo "ENGINE=$IDS_ENGINE_LOWER" > $CONF
-echo "DAYSTOKEEP=365" >> $CONF
-echo "WARN_DISK_USAGE=$WARN_DISK_USAGE" >> $CONF
-echo "CRIT_DISK_USAGE=$CRIT_DISK_USAGE" >> $CONF
+echo "ENGINE=$IDS_ENGINE_LOWER" 			> $CONF
+echo "DAYSTOKEEP=365" 				>> $CONF
+echo "WARN_DISK_USAGE=$WARN_DISK_USAGE" 		>> $CONF
+echo "CRIT_DISK_USAGE=$CRIT_DISK_USAGE" 		>> $CONF
+echo "BRO_ENABLED=$BRO_ENABLED" 			>> $CONF
+echo "OSSEC_AGENT_ENABLED=$OSSEC_AGENT_ENABLED" 	>> $CONF
 
 #########################################
 # Download rules using Pulledpork
