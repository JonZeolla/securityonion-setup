Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 securityonion-setup (20120912-0ubuntu0securityonion265) xenial; urgency=medium
 .
   * streamline setup
Author: Doug Burks <doug.burks@gmail.com>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: http://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: <YYYY-MM-DD>

--- securityonion-setup-20120912.orig/bin/sosetup
+++ securityonion-setup-20120912/bin/sosetup
@@ -1119,62 +1119,69 @@ systemctl enable securityonion.service >
 #########################################
 echo "8"
 echo "# Please wait while stopping services..." | tee -a $LOG
+
 # Stop Elasticsearch and all other processes
 so-stop >> $LOG 2>&1
 pkill suricata
 pkill snort
 pkill autossh
+
 # Delete any Elasticsearch or Logstash data
 rm -rf /nsm/elasticsearch/nodes
 rm -rf /nsm/logstash/queue/main/*
 rm -f /etc/elasticsearch/elasticsearch.yml
+
 # Make sure MySQL is running so that we can fully delete the NSM databases
 [ $SERVER -eq 1 ] && service mysql start >> $LOG 2>&1
+
 # Uncomment any disabled sensors so that we can fully delete them
 sed -i "s|^#$HOST_ORIG-|$HOST_ORIG-|g" $SENSORTAB
 sed -i "s|^#$HOSTNAME-|$HOSTNAME-|g" $SENSORTAB
+
 # Delete all nsm configuration and data
 /usr/sbin/nsm_all_del_quick >> $LOG 2>&1
 
 # Delete any existing ELSA databases.
-if [ "$ELASTIC" = "yes" ]; then
-	if [ -d /var/lib/mysql/elsa_web/ ]; then
-		mysql --defaults-file=/etc/mysql/debian.cnf -e "drop database elsa_web" >> $LOG 2>&1
-	fi
-	if [ -d /var/lib/mysql/syslog/ ]; then
-		mysql --defaults-file=/etc/mysql/debian.cnf -e "drop database syslog" >> $LOG 2>&1
-	fi
-	if [ -d /var/lib/mysql/syslog_data/ ]; then
-		mysql --defaults-file=/etc/mysql/debian.cnf -e "drop database syslog_data" >> $LOG 2>&1
-	fi
+if [ -d /var/lib/mysql/elsa_web/ ]; then
+	mysql --defaults-file=/etc/mysql/debian.cnf -e "drop database elsa_web" >> $LOG 2>&1
+fi
+if [ -d /var/lib/mysql/syslog/ ]; then
+	mysql --defaults-file=/etc/mysql/debian.cnf -e "drop database syslog" >> $LOG 2>&1
+fi
+if [ -d /var/lib/mysql/syslog_data/ ]; then
+	mysql --defaults-file=/etc/mysql/debian.cnf -e "drop database syslog_data" >> $LOG 2>&1
 fi
 
 #########################################
-# MySQL tuning
+# MySQL
 #########################################
+if [ $SERVER -eq 1 ]; then
 
-# Make changes in /etc/mysql/conf.d/
-mkdir -p /etc/mysql/conf.d/
+	# Make changes in /etc/mysql/conf.d/
+	mkdir -p /etc/mysql/conf.d/
 
-# https://code.google.com/p/security-onion/issues/detail?id=416
-# sguild may try to open lots of files
-# so increase open_files_limit on master server
-if [ $SERVER -eq 1 ]; then
+	# https://code.google.com/p/security-onion/issues/detail?id=416
+	# sguild may try to open lots of files
+	# so increase open_files_limit on master server
 	cat << EOF > /etc/mysql/conf.d/securityonion-sguild.cnf	
 [mysqld]
 open_files_limit = 90000
 EOF
-fi
 
-# https://code.google.com/p/security-onion/issues/detail?id=388
-# http://stackoverflow.com/questions/3456159/how-to-shrink-purge-ibdata1-file-in-mysql
-cat << EOF > /etc/mysql/conf.d/securityonion-ibdata1.cnf	
+	# https://code.google.com/p/security-onion/issues/detail?id=388
+	# http://stackoverflow.com/questions/3456159/how-to-shrink-purge-ibdata1-file-in-mysql
+	cat << EOF > /etc/mysql/conf.d/securityonion-ibdata1.cnf	
 [mysqld]
 innodb_file_per_table
 EOF
 
-# Restart mysql to make changes take effect
-pgrep -lf mysqld >/dev/null && service mysql restart >> $LOG 2>&1
+	# Restart mysql to make changes take effect
+	pgrep -lf mysqld >/dev/null && service mysql restart >> $LOG 2>&1
+else
+	# If we're not a server, we can stop mysql
+	service mysql stop >> $LOG 2>&1
+
+fi
 
 #########################################
 # PF_RING
@@ -1206,8 +1213,8 @@ pkill -f ossec_agent
 # Add the Sguil server if necessary
 #########################################
 if [ $SERVER -eq 1 ]; then
-	# If this box was previously a slave, we need to remove securityonion_ssh.conf
-	rm -f /root/.ssh/securityonion_ssh.conf
+	# If this box was previously a slave, we need to remove $SSH_CONF
+	rm -f $SSH_CONF
 	echo "10"
 	echo "# Please wait while creating the Sguil server..." | tee -a $LOG
 	/usr/sbin/nsm_server_add --server-name="$SGUIL_SERVER_NAME" --server-sensor-name=NULL --server-sensor-port=7736 --server-client-port=7734 --server-client-user="$SGUIL_CLIENT_USERNAME" --server-client-pass="$SGUIL_CLIENT_PASSWORD_1" --server-auto=yes --force-yes >> $LOG 2>&1
@@ -1457,13 +1464,6 @@ EOF
 			fi
                 done
 
-		# Bro 2.2 should support PF_RING on multiple interfaces properly now, so comment this out.
-		# If monitoring more than one interface, disable PF_RING:
-		# http://securityonion.blogspot.com/2013/02/important-note-for-those-monitoring.html
-		#if [ `echo $INTERFACES | wc -w` -gt 1 ]; then
-		#	sed -i 's|^lb_method=pf_ring|#lb_method=pf_ring|g' /opt/bro/etc/node.cfg
-		#	sed -i 's|^lb_procs|#lb_procs|g' /opt/bro/etc/node.cfg
-		#fi
         fi
 	# Finished with node.cfg
 	# Now update networks.cfg
@@ -1494,6 +1494,8 @@ EOF
 		sed -i 's|^@load file-extraction|#@load file-extraction|g' /opt/bro/share/bro/site/local.bro
 	fi
 
+	# Configure Bro to log in JSON
+	/usr/sbin/so-elastic-configure-bro >> $LOG 2>&1
 fi
 
 fi
@@ -1648,17 +1650,17 @@ fi
 #########################################
 # Apache configuration
 #########################################
-SSH_DIR="/root/.ssh"
-SSH_CONF="$SSH_DIR/securityonion_ssh.conf"
 echo "35"
 if [ -f $SSH_CONF ]; then
         # We are a SENSOR  
 	echo "# Please wait while stopping and disabling Apache..." | tee -a $LOG
+
 	# Sensors don't need the Apache web server, so stop and disable it
 	service apache2 stop >> $LOG 2>&1
 	update-rc.d -f apache2 disable >> $LOG 2>&1
 else
 	# We are the MASTER
+	echo "# Please wait while configuring and restarting Apache..." | tee -a $LOG
 
 	# Make sure that the Apache web server is enabled
 	update-rc.d -f apache2 enable >> $LOG 2>&1
@@ -1756,13 +1758,24 @@ EOF
 fi
 
 #########################################
+# Forward Node AutoSSH
+#########################################
+if [ "$FORWARD" = "yes" ]; then
+	# If AUTOSSH_OPTIONS is already in SSH_CONF, remove it and replace it with new value.
+	if grep "AUTOSSH_OPTIONS=" $SSH_CONF >/dev/null 2>&1; then
+		sed -i 's/AUTOSSH_OPTIONS.*/AUTOSSH_OPTIONS="-L 6050:localhost:6050"/' $SSH_CONF >> $LOG 2>&1
+	else
+		echo 'AUTOSSH_OPTIONS="-L 6050:localhost:6050"' >> $SSH_CONF
+	fi
+fi
+
+#########################################
 # Start securityonion services
 #########################################
 # disable the snorby output in all barnyard config files
 sed -i 's|^output database: alert, mysql, user=root dbname=snorby host=127.0.0.1|#output database: alert, mysql, user=root dbname=snorby host=127.0.0.1|g' /etc/nsm/*/barnyard2*.conf >> $LOG 2>&1
 echo "45"
 echo "# Please wait while starting all Security Onion services..." | tee -a $LOG
-/usr/sbin/so-autossh-start >> $LOG 2>&1
 /usr/sbin/so-start >> $LOG 2>&1
 sleep 10s
 
@@ -1825,6 +1838,9 @@ EOF
 
 fi
 
+#########################################
+# syslog-ng
+#########################################
 echo "49"
 echo "# Please wait while configuring syslog-ng..." | tee -a $LOG
 
@@ -1872,49 +1888,22 @@ if [ $COUNT -gt 1 ]; then
 	sed -e "s|^\tfile(\"/nsm/bro/logs/current/http.log\".*|$HTTP_LOGS|" $SYSLOGNGCONFSRC > $SYSLOGNGCONFDST
 fi
 
-echo "* Restarting syslog-ng" >> $LOG 2>&1
-service syslog-ng restart >> $LOG 2>&1
-
-# Forward Nodes now have ELASTIC="no", so we need to do some of that config here
-if [ "$FORWARD" = "yes" ]; then
-
-	# Configure syslog-ng to forward over autossh
-	/usr/sbin/so-elastic-configure-syslog-ng >> $LOG 2>&1
-
-	# Configure Bro to log in JSON
-	/usr/sbin/so-elastic-configure-bro >> $LOG 2>&1
-
-	# If AUTOSSH_OPTIONS is already in SSH_CONF, remove it and replace it with new value.
-	if grep "AUTOSSH_OPTIONS=" $SSH_CONF >/dev/null 2>&1; then
-		sed -i 's/AUTOSSH_OPTIONS.*/AUTOSSH_OPTIONS="-L 6050:localhost:6050"/' $SSH_CONF >> $LOG 2>&1
-	else
-		echo 'AUTOSSH_OPTIONS="-L 6050:localhost:6050"' >> $SSH_CONF
-	fi
-fi
-
-if [ $SERVER -ne 1 ]; then
-   	echo "60"
-	echo "# Please wait while stopping Apache web server..." | tee -a $LOG
-	service apache2 stop >> $LOG 2>&1
-
-    	echo "65"
-	echo "# Please wait while stopping and disabling MySQL..." | tee -a $LOG
-	service mysql stop >> $LOG 2>&1
-	echo "manual" > /etc/init/mysql.override
-fi
+/usr/sbin/so-elastic-configure-syslog-ng >> $LOG 2>&1
 
 #########################################
-# Configure Elastic
+# Elastic
 #########################################
 if [ "$ELASTIC" = "yes" ]; then
-	echo "75"
-	echo "# Please wait while configuring Elastic..." | tee -a $LOG
+
 	if ! dpkg -L docker-ce >/dev/null 2>&1; then
 		echo "50"
 		echo "# Please wait while downloading Elastic components..." | tee -a $LOG
 		/usr/sbin/so-elastic-download >> $LOG 2>&1
 	fi
 
+	echo "75"
+	echo "# Please wait while configuring Elastic..." | tee -a $LOG
+
 	if ! grep -q LOG_SIZE_LIMIT $CONF; then
         cat << EOF >> $CONF
 
